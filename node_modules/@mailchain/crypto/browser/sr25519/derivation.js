import { cryptoWaitReady, sr25519DeriveHard } from '@polkadot/util-crypto';
import { chainCodeFromDeriveIndex } from '../hd.js';
import { asSR25519PrivateKey, SR25519PrivateKey } from './private.js';
import { SR25519ExtendedPrivateKey } from './hd.js';

async function sr25519DeriveHardenedKey(parentKey, index) {
    const ready = await cryptoWaitReady(); // needed before calling sr25519DeriveHard
    if (!ready) {
        throw new Error('crypto libraries could not be initialized');
    }
    const chainCode = chainCodeFromDeriveIndex(index);
    const childKeyPair = sr25519DeriveHard(asSR25519PrivateKey(parentKey.privateKey).keyPair, chainCode);
    return SR25519ExtendedPrivateKey.fromPrivateKey(SR25519PrivateKey.fromKeyPair(childKeyPair));
}

export { sr25519DeriveHardenedKey };
