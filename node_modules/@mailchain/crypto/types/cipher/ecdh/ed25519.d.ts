import { KeyExchange } from '@mailchain/crypto/types/cipher';
import { RandomFunction } from '@mailchain/crypto/types/rand';
import { PublicKey } from '@mailchain/crypto/types/public';
import { PrivateKey } from '@mailchain/crypto/types/private';
import { ED25519PublicKey } from '@mailchain/crypto/types/ed25519/public';
import { ED25519PrivateKey } from '@mailchain/crypto/types/ed25519/private';
export declare class ED25519KeyExchange implements KeyExchange {
    randomFunc: RandomFunction;
    constructor(randomFunc?: RandomFunction);
    EphemeralKey(): Promise<PrivateKey>;
    SharedSecret(privateKey: PrivateKey, publicKey: PublicKey): Promise<Uint8Array>;
    static privateKeyToCurve25519(privateKey: ED25519PrivateKey): Uint8Array;
    static publicKeyToCurve25519(publicKey: ED25519PublicKey): Uint8Array;
}
