import { ec as EC } from 'elliptic';
import { KeyExchange } from '@mailchain/crypto/types/cipher';
import { RandomFunction } from '@mailchain/crypto/types/rand';
import { PublicKey } from '@mailchain/crypto/types/public';
import { PrivateKey } from '@mailchain/crypto/types/private';
export declare class SECP256K1KeyExchange implements KeyExchange {
    randomFunc: RandomFunction;
    ec: EC;
    constructor(randomFunc?: RandomFunction);
    EphemeralKey(): Promise<PrivateKey>;
    SharedSecret(privateKey: PrivateKey, publicKey: PublicKey): Promise<Uint8Array>;
}
