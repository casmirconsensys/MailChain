'use strict';

var utilCrypto = require('@polkadot/util-crypto');
var keys = require('../keys.js');

const SR25519PublicKeyLen = 32;
class SR25519PublicKey {
    constructor(bytes) {
        Object.defineProperty(this, "bytes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "curve", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: keys.KindSR25519
        });
        if (bytes.length !== SR25519PublicKeyLen) {
            throw new RangeError('invalid public key length');
        }
        this.bytes = bytes;
    }
    async verify(message, sig) {
        const ready = await utilCrypto.cryptoWaitReady(); // needed before calling sr25519Sign
        if (!ready) {
            throw new Error('crypto libraries could not be initialized');
        }
        return utilCrypto.sr25519Verify(message, sig, this.bytes);
    }
}

exports.SR25519PublicKey = SR25519PublicKey;
exports.SR25519PublicKeyLen = SR25519PublicKeyLen;
