'use strict';

var rand = require('../../rand.js');
var _public$1 = require('../../secp256k1/public.js');
var _private$1 = require('../../secp256k1/private.js');
var _public$2 = require('../../ed25519/public.js');
var _private$2 = require('../../ed25519/private.js');
var _public = require('../../sr25519/public.js');
var _private = require('../../sr25519/private.js');
var ed25519 = require('./ed25519.js');
var sr25519 = require('./sr25519.js');
var secp256k1 = require('./secp256k1.js');

function fromPublicKey(publicKey, rand$1 = rand.secureRandom) {
    switch (publicKey.constructor) {
        case _public$2.ED25519PublicKey:
            return new ed25519.ED25519KeyExchange(rand$1);
        case _public$1.SECP256K1PublicKey:
            return new secp256k1.SECP256K1KeyExchange(rand$1);
        case _public.SR25519PublicKey:
            return new sr25519.SR25519KeyExchange(rand$1);
        default:
            throw RangeError('unknown public key type');
    }
}
function fromPrivateKey(privateKey, rand$1 = rand.secureRandom) {
    switch (privateKey.constructor) {
        case _private$2.ED25519PrivateKey:
            return new ed25519.ED25519KeyExchange(rand$1);
        case _private$1.SECP256K1PrivateKey:
            return new secp256k1.SECP256K1KeyExchange(rand$1);
        case _private.SR25519PrivateKey:
            return new sr25519.SR25519KeyExchange(rand$1);
        default:
            throw RangeError('unknown private key type');
    }
}

exports.fromPrivateKey = fromPrivateKey;
exports.fromPublicKey = fromPublicKey;
