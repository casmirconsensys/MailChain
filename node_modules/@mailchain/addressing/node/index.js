'use strict';

var addressComparison = require('./addressComparison.js');
var addressFormatting = require('./addressFormatting.js');
var addressFromPublicKey = require('./addressFromPublicKey.js');
var addressPredicates = require('./addressPredicates.js');
var encoding = require('./encoding.js');
var test_constants = require('./test.constants.js');
var parseWalletAddress = require('./parseWalletAddress.js');
var nameServiceAddress = require('./nameServiceAddress.js');
var walletAddress = require('./walletAddress.js');
var consts = require('./protocols/consts.js');
var errors = require('./protocols/errors.js');
var protocols = require('./protocols/protocols.js');



exports.isSameAddress = addressComparison.isSameAddress;
exports.formatAddress = addressFormatting.formatAddress;
exports.addressFromPublicKey = addressFromPublicKey.addressFromPublicKey;
exports.isEthereumAddress = addressPredicates.isEthereumAddress;
exports.isMailchainAccountAddress = addressPredicates.isMailchainAccountAddress;
exports.isNearImplicitAccount = addressPredicates.isNearImplicitAccount;
exports.isTezosAddress = addressPredicates.isTezosAddress;
exports.decodeAddressByProtocol = encoding.decodeAddressByProtocol;
exports.encodeAddressByProtocol = encoding.encodeAddressByProtocol;
exports.encodingByProtocol = encoding.encodingByProtocol;
exports.EthereumAlice = test_constants.EthereumAlice;
exports.EthereumBob = test_constants.EthereumBob;
exports.parseWalletAddress = parseWalletAddress.parseWalletAddress;
exports.createNameServiceAddress = nameServiceAddress.createNameServiceAddress;
exports.isNameServiceAddress = nameServiceAddress.isNameServiceAddress;
exports.isSameNameServiceAddress = nameServiceAddress.isSameNameServiceAddress;
exports.parseNameServiceAddress = nameServiceAddress.parseNameServiceAddress;
exports.createWalletAddress = walletAddress.createWalletAddress;
exports.ALGORAND = consts.ALGORAND;
exports.ALL_PROTOCOLS = consts.ALL_PROTOCOLS;
exports.ETHEREUM = consts.ETHEREUM;
exports.MAILCHAIN = consts.MAILCHAIN;
exports.NEAR = consts.NEAR;
exports.SUBSTRATE = consts.SUBSTRATE;
exports.TEZOS = consts.TEZOS;
exports.ProtocolNotSupportedError = errors.ProtocolNotSupportedError;
exports.guessProtocolsFromAddress = protocols.guessProtocolsFromAddress;
